// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("HEROKU_DB_DATABASE_URL")
}

model Donor {
  donorId    String  @id @default(uuid()) @unique
  donorNickname String  @unique
  donorGroupId String? 
  donorWalletAddress String @unique
  Group Group? @relation(fields: [donorGroupId], references: [groupId])
}

model Group {
  groupId        String     @id @default(uuid()) @unique
  groupName String
  proposals Proposal[]
  donors Donor[]
}

model Proposal {
  proposalId String @id @default(uuid()) @unique
  beneficiaryId String?
  groupId String @default("")
  startDate DateTime
  endDate DateTime
  votes String[]
  isApproved Boolean @default(false)
  funders Funders[] 
  donations Donations[]
  Group Group? @relation(fields: [groupId], references: [groupId])
  Beneficiary Beneficiary? @relation(fields: [beneficiaryId], references: [beneficiaryId])
  }


model Beneficiary {
  beneficiaryId String @id @default(uuid()) @unique
  fundingTarget Float
  fundingReceived Float
  startDate DateTime
  endDate DateTime
  donations Donations[]
  proposals Proposal[]
}

model Donations {
  donationId String @id @default(uuid()) @unique
  beneficiaryId String
  proposalId String
  donationTimestamp DateTime
  donationAmount Float
  Beneficiary Beneficiary? @relation(fields: [beneficiaryId], references: [beneficiaryId])
  Proposal Proposal? @relation(fields: [proposalId], references: [proposalId])
}

model Funders {
  funderId String @id @default(uuid()) @unique
  proposalId String
  donorId String
  funderAmount Float
  Proposal Proposal? @relation(fields: [proposalId], references: [proposalId])
}